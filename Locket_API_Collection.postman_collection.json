{
	"info": {
		"_postman_id": "locket-backend-api-collection",
		"name": "Locket Backend API",
		"description": "Complete API collection for Locket Clone Backend testing - Updated with Friend System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check if server is running and healthy"
			}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Auto-save token from response",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.token) {",
									"        pm.collectionVariables.set(\"token\", response.token);",
									"        console.log(\"Token saved:\", response.token);",
									"    }",
									"}",
									"",
									"// Test response",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains token\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login user and get JWT token"
					}
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"profile"
							]
						},
						"description": "Get current user profile (requires authentication)"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"updateduser\",\n  \"profilePicture\": \"https://example.com/avatar.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"profile"
							]
						},
						"description": "Update user profile information"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logout user (client should clear token)"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				}
			]
		},
		{
			"name": "Friends",
			"item": [
				{
					"name": "Send Friend Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipientId\": \"USER_ID_HERE\",\n  \"message\": \"Hi! Let's be friends!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/friends/request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"friends",
								"request"
							]
						},
						"description": "Send friend request to another user"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Accept Friend Request",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/friends/accept/FRIENDSHIP_ID_HERE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"friends",
								"accept",
								"FRIENDSHIP_ID_HERE"
							]
						},
						"description": "Accept a pending friend request"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Get Friends List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/friends?page=1&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"friends"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								}
							]
						},
						"description": "Get user's friends list with pagination"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Get Friend Requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/friends/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"friends",
								"requests"
							]
						},
						"description": "Get pending friend requests received"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Remove Friend",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/friends/FRIENDSHIP_ID_HERE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"friends",
								"FRIENDSHIP_ID_HERE"
							]
						},
						"description": "Remove friend or cancel friend request"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get Posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get all posts (feed) with pagination"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Create Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"imageUrl\": \"https://picsum.photos/400/400\",\n  \"caption\": \"My awesome post! ðŸš€\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						},
						"description": "Create a new post"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Get Single Post",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/POST_ID_HERE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"POST_ID_HERE"
							]
						},
						"description": "Get single post by ID"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Update Post",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"caption\": \"Updated caption text\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/posts/POST_ID_HERE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"POST_ID_HERE"
							]
						},
						"description": "Update post caption"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/POST_ID_HERE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"POST_ID_HERE"
							]
						},
						"description": "Delete post (soft delete)"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Like Post",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/POST_ID_HERE/like",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"POST_ID_HERE",
								"like"
							]
						},
						"description": "Like or unlike a post"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Add Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"This is a great post!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/posts/POST_ID_HERE/comment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"POST_ID_HERE",
								"comment"
							]
						},
						"description": "Add comment to a post"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "Get User Posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/user/USER_ID_HERE?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"user",
								"USER_ID_HERE"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get posts by specific user"
					},
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"console.log('Making request to:', pm.request.url.toString());",
					"console.log('Method:', pm.request.method);",
					"console.log('Timestamp:', new Date().toISOString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global tests for all requests",
					"pm.test('Response time is less than 3000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(3000);",
					"});",
					"",
					"pm.test('Response has success field', function () {",
					"    if (pm.response.code < 500) {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('success');",
					"    }",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
} 